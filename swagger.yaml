swagger: '2.0'

info:
  version: "0.0.1"
  title: Locations API

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /locations:
    # This is a HTTP operation
    get:
      tags:
       - locations
      # Describe this verb here. Note: you can use markdown
      description: "Gets all `Location` objects. Can be filtered by parameters."
      operationId: getLocations
      # This is array of GET operation parameters:
      produces:
        - application/json
      parameters:
        - in: query
          name: q
          description: "Query to search through buildings. Looks through the building name, abbreviation, summary and description"
          required: false
          type: string
        - in: query
          name: dining
          description: "Specify 1 for locations that are dining areas"
          required: false
          type: string
        - in: query
          name: is_open_dining
          description: "Specify 1 for dining locations that are currently open"
          required: false
          type: string
        - in: query
          name: county
          description: "Name of the location in the county"
          required: false
          type: string
        - in: query
          name: campus
          description: "Name of the campus. Valid options are: corvallis, bend, newport or extension"
          required: false
          type: string

      # Expected responses for this operation:
      responses:
        # Response code
        "200":
          description: "Successful response"
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: "#/definitions/ResultObjects"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Errors"
      security:
        - locations_api_key: []

  /locations/{buildingID}:
    get:
      tags:
        - locations
      description: "Finds location by buildingID"
      operationId: getLocationByBuildingID
      produces:
        - application/json
      parameters:
        - name: buildingID
          in: path
          description: "buildingID of location to be searched by"
          required: true
          type: string
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: "#/definitions/ResultObject"
        "404":
          description: "Resource not found"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Errors"
      security:
        - locations_api_key: []
    

securityDefinitions:

  locations_api_key:
    type: apiKey
    name: locations_api_key
    in: query

definitions:
  ResultObject:
    properties:
      links:
        $ref: "#/definitions/Links"
      data:
        $ref: "#/definitions/ResourceObject"

  ResultObjects:
    properties:
      links:
        $ref: "#/definitions/Links"
      data:
        type: array
        items:
          $ref: "#/definitions/ResourceObject"
        
  ResourceObject:
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        $ref: "#/definitions/Attributes"
        
  Attributes:
    properties:
      name:
        type: string
      abbreviation:
        type: string
      latitude:
        type: string
      longitude:
        type: string        
      summary:
        type: string
      description:
        type: string
      address:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      telephone:
        type: string
      fax:
        type: string
      thumbnails:
        type: array
        items:
          type: string
      images:
        type: array
        items:
          type: string
      departments:
        type: array
        items:
          type: string
      website:
        type: string
      sqft:
        type: string
      calendar:
        type: string
      campus:
        type: string
      type:
        type: string
        
  Links:
    properties:
      self:
        type: string
      first:
        type: string
      last:
        type: string
      prev:
        type: string
      next:
        type: string

  Error:
    required:
      - statusCode
      - statusMessage
    properties:
      statusCode:
        type: number
      statusMessage:
        type: string

  Errors:
    title: ArrayOfErrors
    type: array
    items:
      $ref: "#/definitions/Error"
      
