swagger: '2.0'

info:
  version: "0.0.1"
  title: Locations API

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /locations:
    # This is a HTTP operation
    get:
      tags:
       - locations
      # Describe this verb here. Note: you can use markdown
      description: "Gets all `Location` objects. Can be filtered by parameters."
      operationId: getLocations
      # This is array of GET operation parameters:
      produces:
        - application/json
      parameters:
        - in: query
          name: q
          description: "Query to search through buildings. Looks through the building name, abbreviation. Disabled when lat/lon parameter are presented."
          required: false
          type: string
        - in: query
          name: lat
          description: "Latitude of the location. Should be used with lon parameter"
          required: false
          type: number
          format: double
        - in: query
          name: lon
          description: "Longitude of the location. Should be used with lat parameter"
          required: false
          type: number
          format: double
        - in: query
          name: distance
          description: "The radius of the circle centred on the specified location. Default: 2"
          required: false
          type: number
          format: double
        - in: query
          name: distanceUnit
          description: "Distance can be specified in following units: mile, km, m... Default: mile"
          required: false
          type: string
        - in: query
          name: isopen
          description: "True if only search for open restaurants/buildings. Default: 'false' to search for all the results"
          required: false
          type: boolean
        - in: query
          name: campus
          description: "Name of the campus. Valid options are: corvallis and extension"
          required: false
          type: string
        - in: query
          name: type
          description: "Type of location. Valid options are: building and dining"
          required: false
          type: string
        - in: query
          name: page[size]
          description: "Number of results to return. Used in pagination. Default value is 10."
          required: false
          type: string
        - in: query
          name: page[number]
          description: "Page number of results. Used to paginate through results."
          required: false
          type: string

      # Expected responses for this operation:
      responses:
        # Response code
        "200":
          description: "Successful response"
          schema:
            $ref: "#/definitions/ResultObjects"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Errors"
      security:
        - locations_api_key: []

  /locations/{buildingID}:
    get:
      tags:
        - locations
      description: "Finds location by buildingID"
      operationId: getLocationByBuildingID
      produces:
        - application/json
      parameters:
        - name: buildingID
          in: path
          description: "buildingID of location to be searched by"
          required: true
          type: string
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: "#/definitions/ResultObject"
        "404":
          description: "Resource not found"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Errors"
      security:
        - locations_api_key: []

securityDefinitions:

  locations_api_key:
    type: apiKey
    name: locations_api_key
    in: query

definitions:
  ResultObject:
    properties:
      links:
        $ref: "#/definitions/Links"
      data:
        $ref: "#/definitions/ResourceObject"

  ResultObjects:
    properties:
      links:
        $ref: "#/definitions/Links"
      data:
        type: array
        items:
          $ref: "#/definitions/ResourceObject"

  ResourceObject:
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        $ref: "#/definitions/Attributes"

  Attributes:
    properties:
      name:
        type: string
      abbreviation:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      summary:
        type: string
      description:
        type: string
      address:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      telephone:
        type: string
      fax:
        type: string
      thumbnails:
        type: array
        items:
          type: string
      images:
        type: array
        items:
          type: string
      departments:
        type: array
        items:
          type: string
      website:
        type: string
      sqft:
        type: string
      calendar:
        type: string
      campus:
        type: string
      type:
        type: string
      open_hours:
        type: array
        items:
          $ref: "#/definitions/DayHours"
      distance:
        description: "Distance from users' location in kilometer"
        type: number
        format: double

  DayHours:
    properties:
      day:
        type: integer
      hours:
        type: array
        items:
          $ref: "#/definitions/TimeSlot"

  TimeSlot:
    properties:
      start:
        type: string
      end:
        type: string

  Links:
    properties:
      self:
        type: string
      first:
        type: string
      last:
        type: string
      prev:
        type: string
      next:
        type: string

  Error:
    type: object
    properties:
      status:
        type: integer
        format: int32
      developerMessage:
        type: string
        description: An error string aimed at developers.
      userMesage:
        type: string
        description: An error string aimed at end users.
      code:
        type: integer
        description: Error code.
      details:
        type: string

  Errors:
    title: ArrayOfErrors
    type: array
    items:
      $ref: "#/definitions/Error"
